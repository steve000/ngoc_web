<template>
    <div class="goods-list">
        <div class="search">
            <search @searchValue="onSearchGood" :showResetButton="showResetButton" @reset="getReset" :isShowSearchResult="isShowSearchResult" :count="totalCount" :showPlaceholder="'输入商品包名称'"></search>
        </div>
        <div class="search_result_container" v-if="searchItemValueArray.length>0">
            <search-result :searchItemValueArray="searchItemValueArray" :count="totalCount" @deleteItem="getDeleteItem"></search-result>
        </div>
        <div class="table-wrapper">
            <el-table :data="commodityPackingList" border :height="tableHeight">

                <el-table-column label="组合名称" min-width="150">
                    <template slot-scope="scope">
                      <div class="row-btn-show">
                        <div class="row-show" 
                        :title="scope.row.packageName"
                        @click="$router.push({name: `commodityPackingDetails`, params: scope.row})">{{scope.row.packageName ? scope.row.packageName : '--'}}</div>
                      </div>
                    </template>
                </el-table-column>

                <el-table-column width="40">
                    <template slot-scope="scope">
                        <div class="row-btn-show">
                            <div>
                                <more-operating 
                                    @onEdit="$router.push({name: `commodityPackingEdit`,params: scope.row})" 
                                    @onDelete="clickDelete(scope.row)">
                                </more-operating>
                                <span style="padding: 0 7px;float:right;height:1px;"></span>
                            </div>
                        </div>
                    </template>
                </el-table-column>
                <el-table-column label="组合编码" min-width="150">
                    <template slot-scope="scope">
                        <div class="row-show" :title="scope.row.packageId">{{scope.row.packageId ? scope.row.packageId :'--'}}</div>
                    </template>
                </el-table-column>
                <el-table-column label="开始时间" min-width="60">
                    <template slot-scope="scope">
                        <div class="row-show" :title="scope.row.beginTime">{{scope.row.beginTime ? scope.row.beginTime :'--'}}</div>
                    </template>
                </el-table-column>
                <el-table-column label="结束时间" min-width="60">
                    <template slot-scope="scope">
                        <div class="row-show" :title="scope.row.endTime">{{scope.row.endTime ? scope.row.endTime :'--'}}</div>
                    </template>
                </el-table-column>
                <el-table-column label="组合价（元）" min-width="60">
                    <template slot-scope="scope">
                        <div class="row-show" :title="scope.row.packagePrice">{{scope.row.packagePrice ? scope.row.packagePrice :'--'}}</div>
                    </template>
                </el-table-column>
                <el-table-column label="创建时间" min-width="60">
                    <template slot-scope="scope">
                        <div class="row-show" :title="scope.row.createTime">{{scope.row.createTime ? scope.row.createTime :'--'}}</div>
                    </template>
                </el-table-column>

                <div slot="empty" class="table_slot_empty_text">
                    <div><img src="../../../layouts/images/nodata.png" /></div>
                    <div>暂无数据</div>
                </div>
            </el-table>
            <div class="pagination-section">
                <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="pageNo" background :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="totalCount">
                </el-pagination>
            </div>
        </div>
    </div>
</template>
<script>
import TableHeight from "~/mixins/tableheight";
import Search from "~/components/common/Search";
import SearchResult from "~/components/common/SearchResult.vue";
import MoreOperating from "~/components/common/MoreOperatingChannelPrice";
import Modal from "~/components/Modal";
import { mapActions, mapState } from "vuex";

export default {
  props: { operationId: Number, flag: String },
  name: "commodityPackingList",
  mixins: [TableHeight],
  components: {
    Search,
    SearchResult,
    MoreOperating,
    Modal
  },
  data() {
    return {
      searchKey: "",
      commodityPackingList: [],
      pageSize: 10,
      pageNo: 1,
      totalCount: 0,
      showResetButton: false,
      isShowSearchResult: false,
      isClick: false,
      searchItemValueArray: [],
      isClear: false
    };
  },
  watch: {
    flag: function(nval, oval) {
      console.log(111);
      this.pageNo = 1;
      this.pageSize = 10;
      this.refreshPage();
    }
  },
  mounted() {
    console.log(222);
    this.refreshPage();
    this.setTableHeight(275);
  },
  methods: {
    ...mapActions([
      "skuPackageList",
      "skuPackageDelete",
      "showPageLoading",
      "hidePageLoading"
    ]),
    getReset() {
      console.log(333);
      this.showResetButton = false;
      this.isShowSearchResult = false;
      this.isClick = false;
      this.searchKey = "";
      this.refreshPage();
    },
    getDeleteItem(index) {
      this.searchItemValueArray.splice(index);
      this.isClear = true;
      this.searchKey = "";
      this.refreshPage();
    },
    refreshPage() {
      this.showPageLoading();
      var resData = {
        pageSize: this.pageSize,
        pageNo: this.pageNo,
        searchKey: this.searchKey.trim()
      };
      this.skuPackageList(resData)
        .then(resp => {
          this.hidePageLoading();
          this.commodityPackingList = resp.result;
          this.totalCount = resp.totalCount;
        })
        .catch({});
    },
    //模糊查询
    onSearchGood(searchValue) {
      this.searchKey = searchValue;
      this.isClick = true;
      this.isClear = false;
      this.searchItemValueArray = [searchValue];
      this.refreshPage();
    },
    searchEnterFun(e) {
      var keyCode = window.event ? e.keyCode : e.which;
      //  console.log('回车搜索',keyCode,e);
      if (keyCode == 13 && this.searchKey) {
        this.refreshPage();
      } else {
        this.refreshPage();
      }
    },
    //点击删除
    clickDelete(row) {
      console.log(row, "删除项");
      this.$confirm(`确定删除选中的组合商品包？`, `删除组合商品包`, {
        confirmButtonText: "确定",
        type: "warning"
      }).then(() => {
        this.skuPackageDelete({ id: row.id, packageId: row.packageId })
          .then(resp => {
            this.hidePageLoading();
            this.refreshPage();
          })
          .catch({});
      });
    },
    handleSizeChange(nSize) {
      this.pageSize = nSize;
      this.refreshPage(this.flag);
    },
    handleCurrentChange(nPage) {
      this.pageNo = nPage;
      this.refreshPage(this.flag);
    }
  }
};
</script>
<style lang="scss">
.goods-list {
  .search-component {
    right: 0px;
  }
  .search {
    margin-top: 20px;
  }
//   .table-wrapper {
//     overflow-y: hidden;
//     .row-btn-show div {
//       color: black;
//       cursor: default;
//     }
//   }
//   .handleButtonContainer {
//     width: 26px;
//     height: 26px;
//     line-height: 26px;
//     border-radius: 50%;
//     background-color: #eceff1;
//     display: inline-block;
//     text-align: center;
//     vertical-align: middle;
//     margin-right: 10px;
//   }
//   .el-table th:first-child {
//     border-right: none;
//   }
//   .el-table th:nth-child(2) {
//     border-left: none;
//   }
// }

// .el-tooltip__popper.is-light {
//   background: #fff;
//   border: 1px solid #eee;
// }

// .el-tooltip__popper.is-light[x-placement^="bottom"] .popper__arrow {
//   border-bottom-color: #eee;
// }

// .el-input-group__prepend {
//   background-color: #fff;
// }

// .el-input-group--prepend .el-input__inner,
// .el-input-group__append {
//   border-left: 0px;
//   padding-left: 0;
// }

// .el-button + .el-button {
//   margin-left: 10px;
// }

// .iconColor {
//   color: black;
// }

// .showMoreColor {
//   cursor: pointer;
//   &:hover {
//     color: #3b8cff;
//   }
}
</style>
